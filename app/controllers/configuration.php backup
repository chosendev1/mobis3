<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Configuration extends CI_Controller {
	public $data;
    function __construct() {
        parent::__construct();
        $this->load->model('configuration_model');
                
        /**** Generate pagination ****/
        //$this->load->library('pagination');
       // $this->load->library('table');
        $this->data['lang'] = strings();
		$this->data['xajaxOn'] = true;
		$this->data['heading'] = "Configuration";
		$this->data['xjf'] = array("resources/xajax/configuration.php","resources/xajax/savings.php","resources/xajax/loans.php","resources/xajax/holidays.php");
		$this->data['js'] = array("resources/themes/admire/plugins/sparkline/js/jquery.sparkline.min.js",
					"resources/themes/admire/plugins/sparkline/js/jquery.sparkline.min.js",
					"resources/themes/admire/javascript/app.min.js",
					"resources/themes/admire/plugins/inputmask/js/inputmask.min.js",
					"resources/themes/admire/plugins/selectize/js/selectize.min.js",
					"resources/themes/admire/plugins/jqueryui/js/jquery-ui.min.js",
					"resources/themes/admire/plugins/jqueryui/js/jquery-ui-timepicker.min.js",
					"resources/themes/admire/plugins/jqueryui/js/jquery-ui-touch.min.js",
					"resources/themes/admire/javascript/forms/element.js",
					"resources/js/employeeprofiles.js"
					);
		$this->data['css'] = array("resources/themes/admire/plugins/jqueryui/css/jquery-ui-timepicker.min.css","resources/themes/admire/plugins/jqueryui/css/jquery-ui.min.css");
		$this->load->helper('URL');
		$uid = CAP_Session::get('userId');
		if(!isset($uid))
			redirect(base_url()."serviceAuth");
    }
    
    public function index(){
    	echo ("Direct Access prohibited");
    }
    
     public function registerBranch(){
		$this->data['subheading'] = "Register Branch";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("configurations/registerBranch", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
    public function branchSettings(){
		$this->data['subheading'] = "Branch Settings";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("configurations/branchSettings", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
    public function provisionsSettings(){
		$this->data['subheading'] = "Provisions Settings";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("configurations/provisionsSettings", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
    public function closingMonth(){
		$this->data['subheading'] = "Closing Month";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("configurations/closingMonth", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
    public function memberAccounts(){
		$this->data['subheading'] = "Member Accounts";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("configurations/memberAccounts", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
     public function PMTSettings(){
		$this->data['subheading'] = "PMT Settings";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("configurations/PMTSettings", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }

   public function createSavingsProduct(){
		$this->data['subheading'] = "Create A Savings Product";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("savings/createProduct", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
    public function createLoanProduct(){
		$this->data['subheading'] = "Create Loan Product";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("loans/createProduct",  $this->data);
    	$this->load->view("includes/footer",  $this->data);
    }
    
    public function listOfLoanProducts(){		
		$this->data['subheading'] = "Create Loan Product";
		$this->load->view("includes/headerForm",$this->data);
		$this->load->view("loans/listProducts",$this->data);
		$this->load->view("includes/footer",$this->data);
   }
   
   public function listOfSavingsProducts(){
		$this->data['subheading'] = "List Of Savings Products";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("savings/listSavingProducts", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
    public function automaticLoss(){		
        $this->data['subheading'] = "Automatic Loan Loss Provisions";
		$this->load->view("includes/headerForm",$this->data);
		$this->load->view("loans/automaticLoss",$this->data);
		$this->load->view("includes/footer",$this->data);
	}
	
    public function manualLoss(){		
        $this->data['subheading'] = "Automatic Loan Loss Provisions";
		$this->load->view("includes/headerForm",$this->data);
		$this->load->view("loans/addManualLoss",$this->data);
		$this->load->view("includes/footer",$this->data);
	}
	
    public function listOfManualLoss(){		
        $this->data['subheading'] = "Automatic Loan Loss Provisions";
		$this->load->view("includes/headerForm",$this->data);
		$this->load->view("loans/listManualLoss",$this->data);
		$this->load->view("includes/footer",$this->data);
	}
   
   public function registerHoliday(){
		$this->data['subheading'] = "Register Holiday";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("holidays/registerHoliday", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
    public function listOfHolidays(){
		$this->data['subheading'] = "List Of Holidays";
    	$this->load->view("includes/headerForm", $this->data);
    	$this->load->view("holidays/listHolidays", $this->data);
    	$this->load->view("includes/footer", $this->data);
    }
    
  public function regBranch(){
    	$this->load->view("includes/headerForm", $this->data);    	
    	$sacco_name = $this->input->post('sacco_name');
	$branch_no = $this->input->post('branch_no');
	$branch_name = $this->input->post('branch_name');
	$email = $this->input->post('email');
	$address = $this->input->post('address');
	$share_value = $this->input->post('share_value');
	$report_period = $this->input->post('report_period');
	$min_share = $this->input->post('min_shares');
	$max_share = $this->input->post('max_share_per');
	$loan_share = $this->input->post('loan_share_per');
	$loan_save = $this->input->post('loan_save_per');
	$guarantor_share = $this->input->post('guarantor_share_per');
	$guarantor_save = $this->input->post('guarantor_save_per');
	$prefix = $this->input->post('prefix');
	$response ='';
	
	//if($branch_no==NULL||$branch_name==NULL||$share_value==NULL||$report_period==NULL||$min_share==NULL||$max_share==NULL||   $loan_share==NULL||$loan_save==NULL||$guarantor_share==NULL||$guarantor_save==NULL){
		//$response->alert('You may not leave any filled Blank!');
	//$response ="<font class='alert alert-danger'>Fill all the requred fields, then save again.</label>";
	//}
	if(mysql_num_rows(mysql_query("select branch_no from branch where branch_no=".$branch_no))>0)
		$response .='The Branch No. exists. Cannot duplicate it, Choose another number and try again.';
	elseif(mysql_num_rows(mysql_query("select branch_name from branch where branch_name='".$branch_name."'"))>0)
		$response .="A branch with a similar name exists. Cannot use same name for several branches!";
	elseif(mysql_num_rows(mysql_query("select prefix from branch where prefix='".$prefix."'"))>0)
		$response .="A branch with a similar prefix exists. Are you sure you want to use the same prefix?";
		elseif(mysql_query("insert into branch set branch_no='".$branch_no."', overall_name='".$sacco_name."', branch_name='".$branch_name."', email='".$email."', address='".$address."', share_value=".$share_value.", report_period='".$report_period."', min_shares='".$min_share."', max_share_percent='".$max_share."', loan_share_percent='".$loan_share."', loan_save_percent='".$loan_save."', prefix='".$prefix."', guarantor_share_percent='".$guarantor_share."', guarantor_save_percent='".$guarantor_save."', companyId='".$sacco_name."'")){
		
		$action="insert into branch set branch_no='".$branch_no."', overall_name='".$sacco_name."', branch_name='".$branch_name."', email='".$email."', address='".$address."', share_value=".$share_value.", report_period='".$report_period."', min_shares='".$min_share."', max_share_percent='".$max_share."', loan_share_percent='".$loan_share."', loan_save_percent='".$loan_save."', prefix='".$prefix."', guarantor_share_percent='".$guarantor_share."', guarantor_save_percent='".$guarantor_save."', companyId='".$sacco_name."'";
		$response .= "<font class='alert alert-success'>Branch Sucessfully Registered.</font>";
		}
	
	else{
		$response ="<font class='alert alert-danger'>Failed to register Branch. Please Contact Mobis Team</font>";
	//$response->alert("Failed to register Branch. . ".mysql_error());
	}
		@mkdir("logos");
		if($_FILES['logo']['name'] != NULL){
			$logo =$_FILES['logo']['name'];
			//die('dead');
			//$photo_name = preg_replace("/.+\./", "photo_".$mem_no.".", $_FILES['photo']['name']);
			if(!move_uploaded_file($_FILES['logo']['tmp_name'], "logos/".$_FILES['logo']['name']))
				$response = "<font color=red>Could not upload the logo</font><br />";
				$upd = mysql_query("update branch set logo='$logo' where branch_no = $branch_no");
			$msg = "Updated Branch:".$branch_name." Branch No.: ".$branch_no." Logo:".$logo."";
			$action .= " + "."update branch set logo='$logo' where branch_no = $branch_no";
		}
		
		log_action($_SESSION['user_id'], $action, $msg);
		////
		
		$this->data['response'] = $response;
		//$this->data['links'] = array("configuration/branchSettings" => "List Branches");
		$this->data['subheading'] = "Branch Settings";
		$this->load->view("response/response", $this->data);
		$this->load->view("configurations/branchSettings", $this->data);
		$this->load->view("includes/footer", $this->data);
   }
   
   function editBranch()
{
	
	$this->load->view("includes/headerForm", $this->data);    	
    	//$sacco_name = $this->input->post('sacco_name');
	$branch_no = $this->input->post('branch_no');
	$branch_name = $this->input->post('branch_name');
	$email = $this->input->post('email');
	$address = $this->input->post('address');
	$share_value = $this->input->post('share_value');
	$report_period = $this->input->post('report_period');
	$min_share = $this->input->post('min_shares');
	$max_share = $this->input->post('max_share_per');
	$loan_share = $this->input->post('loan_share_per');
	$loan_save = $this->input->post('loan_save_per');
	$guarantor_share = $this->input->post('guarantor_share_per');
	$guarantor_save = $this->input->post('guarantor_save_per');
	$prefix = $this->input->post('prefix');
	$response ='';
	
	if ($branch_no == ''  || $branch_name == '' || $email == '' || $address == '' || $share_value == '' || $report_period == '' || $min_share == '' || $max_share == '' || $loan_share == '' || $loan_save == '' || $guarantor_share == '' || $guarantor_save == '' || $prefix == '')
	{
		$response.= "<font color='red'>Please Fill in all the fields marked in red.</font>";
		//echo $response;
		
	}
	else
	{
		if($loan_save != 0)
			$loan_save = (100 /$loan_save) * 100;
		if($loan_share != 0)
			$loan_share = (100 /$loan_share) * 100;
		if($guarantor_save != 0) 
			$guarantor_save = (100 /$guarantor_save) * 100;
		if($guarantor_share != 0)
			$guarantor_share = (100 /$guarantor_share) * 100;
		$res = @mysql_query("update branch set  branch_no = '".$branch_no."',branch_name = '".ucfirst($branch_name)."', email = '".$email."', address ='".$address."', share_value = '".$share_value."', min_shares ='".$min_share."', max_share_percent = '".$max_share."', loan_share_percent = '".$loan_share."', loan_save_percent = '".$loan_save."', guarantor_share_percent='".$guarantor_share."', guarantor_save_percent = '".$guarantor_save."',  prefix='".$prefix."' where branch_no ='". $branch_no."'");
		
		if($res==1){
			$response .= "<font color=green>Settings Successfully Updated</font>";
			
			$action = "update branch set  branch_name = '".ucfirst($branch_name)."', email = '".$email."', address ='".$address."', share_value = '".$share_value."', min_shares ='".$min_shares."', max_share_percent = '".$max_share_percent."', loan_share_percent = '".$loan_share_percent."', loan_save_percent = '".$loan_save_percent."', guarantor_share_percent='".$guarantor_share_percent."', guarantor_save_percent = '".$guarantor_save_percent."',  prefix='".$prefix."' where branch_no ='". $branch_no."'";
			//mysql_query("insert into logs set user_id='".$_SESSION['user_id']."', time=NOW(),  action='".$_SESSION['name'].":  ".mysql_escape_string($action)."'");
			@mkdir("logos");
			$logoupdt='';
		if($_FILES['logo']['name'] != NULL){
			$logo =$_FILES['logo']['name'];
			//die('dead');
			//$photo_name = preg_replace("/.+\./", "photo_".$mem_no.".", $_FILES['photo']['name']);
			if(!move_uploaded_file($_FILES['logo']['tmp_name'], "logos/".$_FILES['logo']['name']))
				$response = "<font color=red>Could not upload the logo</font><br />";
				$upd = mysql_query("update branch set logo='$logo' where branch_no = $branch_no");
			$logoupdt .= "Logo:".$logo."";
			$action .= " + "."update branch set logo='$logo' where branch_no = $branch_no";
		}
		$msg = "Updated Branch:".$branch_name." Branch No.: ".$branch_no." ".logoupdt."";
		log_action($_SESSION['user_id'], $action, $msg);
		
		}else
			$response .= "<font color=red><b>Settings not updated.".mysql_error()."</b></font>";
		
	}
			
		$this->data['response'] = $response;
		//$this->data['links'] = array("configuration/branchSettings" => "List Branches");
		$this->data['subheading'] = "Branch Settings";
    	        $this->load->view("response/response", $this->data);
    	        $this->load->view("configurations/branchSettings", $this->data);
		
		///$this->branchSettings();
		$this->load->view("includes/footer", $this->data);
}
  } 
?>
